{"ast":null,"code":"import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import AppMode from'./../AppMode.js';import ConfirmDialog from'./ConfirmDialog.js';var RoundsTable=/*#__PURE__*/function(_React$Component){_inherits(RoundsTable,_React$Component);function RoundsTable(props){var _this;_classCallCheck(this,RoundsTable);_this=_possibleConstructorReturn(this,_getPrototypeOf(RoundsTable).call(this,props));_this.editRound=function(id){_this.props.setEditId(id);_this.props.changeMode(AppMode.ROUNDS_EDITROUND);};_this.DeleteDialog=function(id){_this.props.setDeleteId(id);_this.setState({showDeleteDialog:true});_this.setState({target:id});};_this.cancelDelete=function(){_this.setState({showDeleteDialog:false});};_this.confirmDelete=function(){_this.props.deleteRound();_this.setState({showDeleteDialog:false});};_this.renderTable=function(){var table=[];var _loop=function _loop(r){table.push(React.createElement(\"tr\",{key:r},React.createElement(\"td\",null,_this.props.rounds[r].date),React.createElement(\"td\",null,_this.props.rounds[r].exercise),React.createElement(\"td\",null,_this.props.rounds[r].weights),React.createElement(\"td\",null,_this.props.rounds[r].sets),React.createElement(\"td\",null,_this.props.rounds[r].reps),React.createElement(\"td\",null,_this.props.rounds[r].minutes+\":\"+_this.props.rounds[r].seconds),React.createElement(\"td\",null,React.createElement(\"button\",{onClick:_this.props.menuOpen?null:function(){return _this.editRound(r);}},React.createElement(\"span\",{className:\"fa fa-eye\"}))),React.createElement(\"td\",null,React.createElement(\"button\",{onClick:_this.props.menuOpen?null:function(){return _this.DeleteDialog(r);}},React.createElement(\"span\",{className:\"fa fa-trash\"})))));};for(var r in _this.props.rounds){_loop(r);}return table;};_this.state={showDeleteDialog:_this.props.showConfirmDelete,target:0};return _this;}//editRound -- Triggered when the user clicks the edit button for a given\n//round. The id param is the unique property that identifies the round.\n//Set the state variable representing the id of the round to be edited and\n//then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n//chosen round.\n_createClass(RoundsTable,[{key:\"render\",//render--render the entire rounds table with header, displaying a \"No\n//Rounds Logged\" message in case the table is empty.\nvalue:function render(){return React.createElement(\"div\",null,this.state.showDeleteDialog==true?React.createElement(ConfirmDialog,{confirm:this.confirmDelete,cancel:this.cancelDelete}):null,React.createElement(\"div\",{className:\"padded-page\"},React.createElement(\"h1\",null),React.createElement(\"table\",{className:\"table table-hover\"},React.createElement(\"thead\",{className:\"thead-light\"},React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Date\"),React.createElement(\"th\",null,\"Exercise\"),React.createElement(\"th\",null,\"Weights\"),React.createElement(\"th\",null,\"Sets\"),React.createElement(\"th\",null,\"Repetitions\"),React.createElement(\"th\",null,\"Times\"),React.createElement(\"th\",null,\"View/Edit...\"),React.createElement(\"th\",null,\"Delete\"))),React.createElement(\"tbody\",null,Object.keys(this.props.rounds).length===0?React.createElement(\"tr\",null,React.createElement(\"td\",{colSpan:\"5\",style:{fontStyle:\"italic\"}},\"No rounds logged\")):this.renderTable()))));}}]);return RoundsTable;}(React.Component);export default RoundsTable;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/src/components/RoundsTable.js"],"names":["React","AppMode","ConfirmDialog","RoundsTable","props","editRound","id","setEditId","changeMode","ROUNDS_EDITROUND","DeleteDialog","setDeleteId","setState","showDeleteDialog","target","cancelDelete","confirmDelete","deleteRound","renderTable","table","r","push","rounds","date","exercise","weights","sets","reps","minutes","seconds","menuOpen","state","showConfirmDelete","Object","keys","length","fontStyle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\n\nclass RoundsTable extends React.Component {\n  constructor(props) {\n    super (props);\n    this.state = {showDeleteDialog: this.props.showConfirmDelete,\n                  target: 0}\n  }\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  DeleteDialog = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showDeleteDialog: true});\n    this.setState({target: id})\n  }\n  cancelDelete = () =>{\n    this.setState({showDeleteDialog: false});\n  }\n  confirmDelete = () =>{\n    this.props.deleteRound()\n    this.setState({showDeleteDialog: false});\n  }\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (const r in this.props.rounds) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date}</td>\n        <td>{this.props.rounds[r].exercise}</td>\n        <td>{this.props.rounds[r].weights}</td>\n        <td>{this.props.rounds[r].sets}</td>\n        <td>{this.props.rounds[r].reps}</td>\n        <td>{this.props.rounds[r].minutes + \":\" + \n              this.props.rounds[r].seconds}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.DeleteDialog(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div>\n      {this.state.showDeleteDialog == true? \n      <ConfirmDialog\n      confirm={this.confirmDelete}\n      cancel={this.cancelDelete}/> \n      : null}\n      <div className=\"padded-page\">\n        <h1></h1>\n        <table className=\"table table-hover\">\n          <thead className=\"thead-light\">\n          <tr>\n          <th>Date</th>\n          <th>Exercise</th>\n          <th>Weights</th>\n          <th>Sets</th>\n          <th>Repetitions</th>\n          <th>Times</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n          </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.props.rounds).length === 0 ? \n            <tr>\n            <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n            </tr> : this.renderTable()\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n"]},"metadata":{},"sourceType":"module"}