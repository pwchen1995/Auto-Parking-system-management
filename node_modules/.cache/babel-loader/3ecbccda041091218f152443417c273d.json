{"ast":null,"code":"import _defineProperty from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import AppMode from'./../AppMode.js';var RoundForm=/*#__PURE__*/function(_React$Component){_inherits(RoundForm,_React$Component);function RoundForm(props){var _this;_classCallCheck(this,RoundForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(RoundForm).call(this,props));//Create date object for today, taking time zone into consideration\n_this.handleChange=function(event){var name=event.target.name;if(name===\"seconds\"){var newSec=event.target.value.length<2?\"0\"+event.target.value:event.target.value;var newSGS=_this.computeSGS(_this.state.strokes,_this.state.minutes,newSec);_this.setState({seconds:newSec,SGS:newSGS});}else if(name===\"strokes\"){var newStrokes=event.target.value;var _newSGS=_this.computeSGS(newStrokes,_this.state.minutes,_this.state.seconds);_this.setState({strokes:newStrokes,SGS:_newSGS});}else if(name===\"minutes\"){var newMin=event.target.value;var _newSGS2=_this.computeSGS(_this.state.strokes,newMin,_this.state.seconds);_this.setState({minutes:newMin,SGS:_newSGS2});}else{_this.setState(_defineProperty({},name,event.target.value));}};_this.handleSubmit=function(event){//start spinner\n_this.setState({faIcon:\"fa fa-spin fa-spinner\",btnLabel:_this.props.mode===AppMode.ROUNDS_LOGROUND?\"Saving...\":\"Updating...\"});//Prepare current round data to be saved\nvar roundData=_this.state;delete roundData.faIcon;delete roundData.btnLabel;//call saveRound on 1 second delay to show spinning icon\nsetTimeout(_this.props.saveRound,1000,roundData);event.preventDefault();};_this.computeSGS=function(strokes,min,sec){return Number(strokes)+Number(min)+\":\"+sec;};var today=new Date(Date.now()-new Date().getTimezoneOffset()*60000);//store date as ISO string\nif(_this.props.mode===AppMode.ROUNDS_LOGROUND){//If logging a new round, the starting state is a default round with\n//today's date.\n_this.state={date:today.toISOString().substr(0,10),plate:\"\",slotID:0,sets:1,minutes:0,seconds:\"00\",notes:\"\",faIcon:\"fa fa-save\",btnLabel:\"Save REs Data\"};}else{//if editing an existing round, the starting state is the round's\n//current data\n_this.state=_this.props.startData;_this.state.faIcon=\"fa fa-edit\";_this.state.btnLabel=\"Update Round Data\";}return _this;}_createClass(RoundForm,[{key:\"render\",value:function render(){return React.createElement(\"form\",{className:\"padded-page\",onSubmit:this.handleSubmit},React.createElement(\"center\",null,React.createElement(\"p\",null),React.createElement(\"label\",null,\"Plate:\",React.createElement(\"input\",{name:\"plate\",className:\"form-control form-center\",type:\"text\",value:this.state.plate,onChange:this.handleChange,placeholder:\"Plate Number\",size:\"50\",maxLength:\"50\"})),React.createElement(\"p\",null),React.createElement(\"label\",null,\"Expect Parking Slot:\",React.createElement(\"input\",{name:\"slotID\",className:\"form-control form-center\",type:\"text\",value:this.state.slotID,onChange:this.handleChange,placeholder:\"slot id\",size:\"20\",maxLength:\"20\"})),React.createElement(\"p\",null),React.createElement(\"label\",null,\"Date:\",React.createElement(\"input\",{name:\"date\",className:\"form-control form-center\",type:\"date\",value:this.state.date,onChange:this.handleChange})),React.createElement(\"p\",null),React.createElement(\"label\",null,\"Time: \",React.createElement(\"br\",null),React.createElement(\"input\",{name:\"minutes\",type:\"number\",size:\"3\",min:\"0\",max:\"400\",value:this.state.minutes,onChange:this.handleChange}),\":\",React.createElement(\"input\",{name:\"seconds\",type:\"number\",size:\"2\",min:\"1\",max:\"60\",value:this.state.seconds,onChange:this.handleChange})),React.createElement(\"p\",null),React.createElement(\"label\",null,\"Notes:\",React.createElement(\"textarea\",{name:\"notes\",className:\"form-control\",rows:\"6\",cols:\"75\",placeholder:\"Enter REs notes\",value:this.state.notes,onChange:this.handleChange})),React.createElement(\"p\",null),React.createElement(\"p\",null),React.createElement(\"button\",{type:\"submit\",style:{width:\"70%\",fontSize:\"36px\"},className:\"btn btn-primary btn-color-theme\"},React.createElement(\"span\",{className:this.state.faIcon}),\"\\xA0\",this.state.btnLabel)));}}]);return RoundForm;}(React.Component);export default RoundForm;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Spring2021/Element of network sicence/project/ia5-pwchen1995/src/components/RoundForm.js"],"names":["React","AppMode","RoundForm","props","handleChange","event","name","target","newSec","value","length","newSGS","computeSGS","state","strokes","minutes","setState","seconds","SGS","newStrokes","newMin","handleSubmit","faIcon","btnLabel","mode","ROUNDS_LOGROUND","roundData","setTimeout","saveRound","preventDefault","min","sec","Number","today","Date","now","getTimezoneOffset","date","toISOString","substr","plate","slotID","sets","notes","startData","width","fontSize","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundForm extends React.Component {\n    constructor(props) {\n        super(props);\n        //Create date object for today, taking time zone into consideration\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n        //store date as ISO string\n        if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\n            //If logging a new round, the starting state is a default round with\n            //today's date.\n            this.state = {date:  today.toISOString().substr(0,10), \n                          plate: \"\",\n                          slotID: 0,\n                          sets: 1,\n                          minutes: 0,\n                          seconds: \"00\",\n                          notes: \"\",\n                          faIcon: \"fa fa-save\",\n                          btnLabel: \"Save REs Data\"}\n        } else {\n            //if editing an existing round, the starting state is the round's\n            //current data\n            this.state = this.props.startData;\n            this.state.faIcon = \"fa fa-edit\";\n            this.state.btnLabel = \"Update Round Data\";\n        }\n    }\n  \n  \n    handleChange = (event) => {\n        const name = event.target.name;\n        if (name === \"seconds\") {\n          let newSec = (event.target.value.length < 2 ? \"0\" + \n            event.target.value : event.target.value);\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \n                                       newSec);\n          this.setState({seconds: newSec, SGS: newSGS});\n        } else if (name === \"strokes\") {\n          let newStrokes = event.target.value;\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \n            this.state.seconds);\n          this.setState({strokes: newStrokes, SGS: newSGS});\n        } else if (name === \"minutes\") {\n            let newMin = event.target.value;\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \n              this.state.seconds);\n            this.setState({minutes: newMin, SGS: newSGS});\n        } else {\n          this.setState({[name]: event.target.value});\n        }\n    }\n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n        //start spinner\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                                    \"Saving...\" : \"Updating...\")});\n        //Prepare current round data to be saved\n        let roundData = this.state;\n        delete roundData.faIcon;\n        delete roundData.btnLabel;\n        //call saveRound on 1 second delay to show spinning icon\n        setTimeout(this.props.saveRound,1000,roundData); \n        event.preventDefault(); \n        }\n  \n\n    computeSGS = (strokes, min, sec) => {\n      return (Number(strokes) + Number(min)) \n                  + \":\" + sec;\n    }\n  \n    render() {\n      return (\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\n          <center>\n            <p></p>\n            <label>\n              Plate:\n              <input name=\"plate\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.plate} onChange={this.handleChange}\n                placeholder=\"Plate Number\" size=\"50\" maxLength=\"50\" />\n            </label>\n          <p></p>\n          <label>\n              Expect Parking Slot:\n              <input name=\"slotID\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.slotID} onChange={this.handleChange}\n                placeholder=\"slot id\" size=\"20\" maxLength=\"20\" />\n            </label>\n          <p></p>\n          {/* <label>Sets:\n          <select name=\"sets\" value={this.state.sets} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n            <option value=\"11\">11</option>\n            <option value=\"12\">12</option>\n            <option value=\"13\">13</option>\n            <option value=\"14\">14</option>\n            <option value=\"15\">15</option>\n            <option value=\"16\">16</option>\n            <option value=\"17\">17</option>\n            <option value=\"18\">18</option>\n            <option value=\"19\">19</option>\n            <option value=\"20\">20</option>\n          </select> \n          </label>\n          <p></p>\n          <label>Reps:\n          <select name=\"reps\" value={this.state.reps} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select> \n          </label> */}\n          <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n          <p></p>\n          <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"0\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"1\" max=\"60\" value={this.state.seconds} \n            onChange={this.handleChange} />\n          </label>\n          {/* <p></p>\n          <label>Predicted One-repetition Maximum: <br></br>\n              <input name=\"1pr\" className=\"form-center\" type=\"text\" size=\"10\" \n                disabled={true} value={this.state.MaxRep} />\n          </label> */}\n          <p></p>\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter REs notes\" value={this.state.notes} \n                onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\n          </button>\n          </center>\n        </form>\n      );\n    }\n}\n\nexport default RoundForm;"]},"metadata":{},"sourceType":"module"}