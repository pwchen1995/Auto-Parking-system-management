{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Spring2021/Software Quality/project/ia5-pwchen1995/src/components/ReservationsTable.js\";\nimport React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\nimport ConfirmExit from './ConfirmExit.js';\n\nclass RoundsTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.editRound = id => {\n      alert(\"This function is under maintance!  \"); // this.props.setEditId(id);\n      // this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n    };\n\n    this.DeleteDialog = id => {\n      this.props.setDeleteId(id);\n      this.setState({\n        showDeleteDialog: true\n      });\n      this.setState({\n        target: id\n      });\n    };\n\n    this.cancelDelete = () => {\n      this.setState({\n        showDeleteDialog: false\n      });\n    };\n\n    this.confirmDelete = () => {\n      this.props.deleteRound();\n      this.setState({\n        showDeleteDialog: false\n      });\n    };\n\n    this.DeleteDialog = id => {\n      this.props.setDeleteId(id);\n      this.setState({\n        showDeleteDialog: true\n      });\n      this.setState({\n        target: id\n      });\n    };\n\n    this.cancelExit = () => {\n      this.setState({\n        showExitDialog: false\n      });\n    };\n\n    this.confirmExit = () => {\n      this.props.deleteRound();\n      this.setState({\n        showExitDialog: false\n      });\n    };\n\n    this.renderTable = () => {\n      let table = [];\n\n      for (const r in this.props.rounds) {\n        table.push(React.createElement(\"tr\", {\n          key: r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, this.props.rounds[r].date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, this.props.rounds[r].minutes + \":\" + this.props.rounds[r].seconds), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, this.props.rounds[r].plate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, this.props.rounds[r].slot), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.props.menuOpen ? null : () => this.editRound(r),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fa fa-eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.props.menuOpen ? null : () => this.DeleteDialog(r),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fa fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        })))));\n      }\n\n      return table;\n    };\n\n    this.state = {\n      showDeleteDialog: this.props.showConfirmDelete,\n      showExitDialog: this.props.showExit,\n      target: 0\n    };\n  } //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.showDeleteDialog == true ? React.createElement(ConfirmDialog, {\n      confirm: this.confirmDelete,\n      cancel: this.cancelDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : null, this.state.showExitDialog == true ? React.createElement(ConfirmExit, {\n      confirm: this.confirmExit,\n      cancel: this.cancelExit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"padded-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Times\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Plate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Assinged slot\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"View/Edit...\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, Object.keys(this.props.rounds).length === 0 ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"5\",\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"No reservation found\")) : this.renderTable()))));\n  }\n\n}\n\nexport default RoundsTable;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Spring2021/Software Quality/project/ia5-pwchen1995/src/components/ReservationsTable.js"],"names":["React","AppMode","ConfirmDialog","ConfirmExit","RoundsTable","Component","constructor","props","editRound","id","alert","DeleteDialog","setDeleteId","setState","showDeleteDialog","target","cancelDelete","confirmDelete","deleteRound","cancelExit","showExitDialog","confirmExit","renderTable","table","r","rounds","push","date","minutes","seconds","plate","slot","menuOpen","state","showConfirmDelete","showExit","render","Object","keys","length","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\nimport ConfirmExit from './ConfirmExit.js';\n\nclass RoundsTable extends React.Component {\n  constructor(props) {\n    super (props);\n    this.state = {showDeleteDialog: this.props.showConfirmDelete,\n                  showExitDialog: this.props.showExit,\n                  target: 0}\n  }\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    alert(\"This function is under maintance!  \")\n    // this.props.setEditId(id);\n    // this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  DeleteDialog = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showDeleteDialog: true});\n    this.setState({target: id})\n  }\n  cancelDelete = () =>{\n    this.setState({showDeleteDialog: false});\n  }\n  confirmDelete = () =>{\n    this.props.deleteRound()\n    this.setState({showDeleteDialog: false});\n  }\n\n  DeleteDialog = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showDeleteDialog: true});\n    this.setState({target: id})\n  }\n  cancelExit = () =>{\n    this.setState({showExitDialog: false});\n  }\n  confirmExit = () =>{\n    this.props.deleteRound()\n    this.setState({showExitDialog: false});\n  }\n  \n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (const r in this.props.rounds) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date}</td>\n        <td>{this.props.rounds[r].minutes + \":\" + \n              this.props.rounds[r].seconds}\n        </td>\n        <td>{this.props.rounds[r].plate}</td>\n        <td>{this.props.rounds[r].slot}</td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.DeleteDialog(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div>\n      {this.state.showDeleteDialog == true? \n      <ConfirmDialog\n      confirm={this.confirmDelete}\n      cancel={this.cancelDelete}/> \n      : null}\n      {this.state.showExitDialog == true? \n      <ConfirmExit\n      confirm={this.confirmExit}\n      cancel={this.cancelExit}/> \n      : null}\n      <div className=\"padded-page\">\n        <h1></h1>\n        <table className=\"table table-hover\">\n          <thead className=\"thead-light\">\n          <tr>\n          <th>Date</th>\n          <th>Times</th>\n          <th>Plate</th>\n          <th>Assinged slot</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n          </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.props.rounds).length === 0 ? \n            <tr>\n            <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No reservation found</td>\n            </tr> : this.renderTable()\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n"]},"metadata":{},"sourceType":"module"}