{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Fall2020/Git/class assignment/code-ch17/src/components/App.js\";\nimport React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport FloatingButton from './FloatingButton.js';\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\";\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.COURSES] = \"Courses\";\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.COURSES] = CoursesPage;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChangeMode = newMode => {\n      if (this.state.menuOpen == true && newMode == \"RoundsMode-LogRound\") {\n        this.setState({\n          mode: this.state.mode\n        });\n      } else {\n        this.setState({\n          mode: newMode\n        });\n      }\n\n      if (this.state.mode == \"RoundsMode-LogRound\") {\n        this.setState({\n          disableNavBar: true\n        });\n      } else {\n        this.setState({\n          disableNavBar: false\n        });\n      }\n    };\n\n    this.openMenu = () => {\n      this.setState({\n        menuOpen: true\n      });\n    };\n\n    this.closeMenu = () => {\n      this.setState({\n        menuOpen: false\n      });\n    };\n\n    this.toggleMenuOpen = () => {\n      this.setState(prevState => ({\n        menuOpen: !prevState.menuOpen\n      }));\n    };\n\n    this.setUserId = Id => {\n      this.setState({\n        userId: Id\n      });\n    };\n\n    this.openRoundsForm = () => {\n      console.log(this.state.mode);\n      this.setState({\n        mode: AppMode.ROUNDS_LOGROUND\n      });\n    };\n\n    this.state = {\n      mode: AppMode.LOGIN,\n      menuOpen: false,\n      userId: \"\",\n      disableNavBar: false\n    };\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      title: modeTitle[this.state.mode],\n      mode: this.state.mode,\n      changeMode: this.handleChangeMode,\n      menuOpen: this.state.menuOpen,\n      toggleMenuOpen: this.toggleMenuOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(SideMenu, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      toggleMenuOpen: this.toggleMenuOpen,\n      userId: this.state.userId,\n      openRoundsForm: this.openRoundsForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ModeBar, {\n      mode: this.state.mode,\n      changeMode: this.handleChangeMode,\n      menuOpen: this.state.menuOpen,\n      disableNavBar: this.state.disableNavBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(ModePage, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      changeMode: this.handleChangeMode,\n      userId: this.state.userId,\n      setUserId: this.setUserId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Git/class assignment/code-ch17/src/components/App.js"],"names":["React","NavBar","SideMenu","ModeBar","FloatingButton","LoginPage","AppMode","FeedPage","Rounds","CoursesPage","modeTitle","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","modeToPage","App","Component","constructor","handleChangeMode","newMode","state","menuOpen","setState","mode","disableNavBar","openMenu","closeMenu","toggleMenuOpen","prevState","setUserId","Id","userId","openRoundsForm","console","log","render","ModePage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport FloatingButton from './FloatingButton.js';\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\"\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.COURSES] = \"Courses\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.COURSES] = CoursesPage;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  userId: \"\",\n                  disableNavBar: false};\n  }\n\n  handleChangeMode = (newMode) => {\n    if (this.state.menuOpen == true && newMode == \"RoundsMode-LogRound\"){\n      this.setState({mode: this.state.mode});\n    }\n    else {\n      this.setState({mode: newMode});\n    }\n    if (this.state.mode == \"RoundsMode-LogRound\"){\n      this.setState({disableNavBar: true});\n    }\n    else {\n      this.setState({disableNavBar: false});\n    }\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id});\n  }\n  openRoundsForm = () =>{\n    console.log(this.state.mode)\n    this.setState({mode: AppMode.ROUNDS_LOGROUND});\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div>\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            userId={this.state.userId}\n            openRoundsForm={this.openRoundsForm}/>\n          <ModeBar \n            mode={this.state.mode} \n            changeMode={this.handleChangeMode}\n            menuOpen={this.state.menuOpen}\n            disableNavBar={this.state.disableNavBar}/>\n          <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userId={this.state.userId}\n            setUserId={this.setUserId}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}