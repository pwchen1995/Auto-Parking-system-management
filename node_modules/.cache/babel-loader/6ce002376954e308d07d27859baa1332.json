{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Fall2020/Git/class assignment/code-ch17/src/components/RoundsTable.js\";\nimport React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\n\nclass RoundsTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.editRound = id => {\n      this.props.setEditId(id);\n      this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n    };\n\n    this.confirmDelete = id => {\n      alert(\"Confirm Delete!\");\n      this.props.setDeleteId(id);\n      this.setState({\n        showConfirmDelete: true\n      });\n      console.log(this.state.showConfirmDelete);\n    };\n\n    this.cancelDelete = condition => {\n      alert(\"Canceled\");\n    };\n\n    this.renderTable = () => {\n      let table = [];\n\n      for (const r in this.props.rounds) {\n        table.push(React.createElement(\"tr\", {\n          key: r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, this.props.rounds[r].date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, this.props.rounds[r].course), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, Number(this.props.rounds[r].strokes) + Number(this.props.rounds[r].minutes) + \":\" + this.props.rounds[r].seconds + \" (\" + this.props.rounds[r].strokes + \" in \" + this.props.rounds[r].minutes + \":\" + this.props.rounds[r].seconds + \")\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.props.menuOpen ? null : () => this.editRound(r),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fa fa-eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.props.menuOpen ? null : () => this.confirmDelete(r),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fa fa-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })))));\n      }\n\n      return table;\n    };\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.showConfirmDelete == true ? React.createElement(ConfirmDialog, {\n      cancel: this.cancelDelete(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"padded-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Course\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Score\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"View/Edit...\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, Object.keys(this.props.rounds).length === 0 ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"5\",\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"No rounds logged\")) : this.renderTable()))));\n  }\n\n}\n\nexport default RoundsTable;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Git/class assignment/code-ch17/src/components/RoundsTable.js"],"names":["React","AppMode","ConfirmDialog","RoundsTable","Component","editRound","id","props","setEditId","changeMode","ROUNDS_EDITROUND","confirmDelete","alert","setDeleteId","setState","showConfirmDelete","console","log","state","cancelDelete","condition","renderTable","table","r","rounds","push","date","course","Number","strokes","minutes","seconds","menuOpen","render","Object","keys","length","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\n\nclass RoundsTable extends React.Component {\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  confirmDelete = (id) => {\n    alert(\"Confirm Delete!\")\n    this.props.setDeleteId(id);\n    this.setState({showConfirmDelete: true});\n    console.log(this.state.showConfirmDelete)\n  }\n  cancelDelete = (condition) =>{\n    alert(\"Canceled\")\n  }\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (const r in this.props.rounds) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date}</td>\n        <td>{this.props.rounds[r].course}</td>\n        <td>{(Number(this.props.rounds[r].strokes) + \n              Number(this.props.rounds[r].minutes)) +\n              \":\" + this.props.rounds[r].seconds + \" (\" + \n              this.props.rounds[r].strokes + \n              \" in \" + this.props.rounds[r].minutes + \":\" + \n              this.props.rounds[r].seconds + \")\"}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.confirmDelete(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div>\n      {this.props.showConfirmDelete == true? \n      <ConfirmDialog\n      cancel={this.cancelDelete()}/> \n      : null}\n      <div className=\"padded-page\">\n        <h1></h1>\n        <table className=\"table table-hover\">\n          <thead className=\"thead-light\">\n          <tr>\n            <th>Date</th>\n            <th>Course</th>\n            <th>Score</th>\n            <th>View/Edit...</th>\n            <th>Delete</th>\n          </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.props.rounds).length === 0 ? \n            <tr>\n            <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n            </tr> : this.renderTable()\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n"]},"metadata":{},"sourceType":"module"}