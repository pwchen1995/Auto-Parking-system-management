{"version":3,"sources":["Parking-Information.png","reservation.png","payment.jpeg","cusService.png","AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","components/LoginPage.js","components/ConfirmDialog.js","components/ReservationsTable.js","components/ReservationForm.js","components/Reservations.js","components/AboutBox.js","components/MainPage.js","components/InfoPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppMode","LOGIN","RESERVATIONS","RESERVATIONS_LOGRESERVATION","RESERVATIONS_EDITRESERVATION","MAINPAGE","INFOPAGE","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","border-radius","title","React","Component","SideMenu","renderModeMenuItems","openRoundsForm","userId","showAbout","logOut","ModeBar","ModeBarStyle","opacity","opa","style","disabled","disable","ROUNDS","ROUNDS_EDITROUND","ROUNDS_LOGROUND","FloatingButton","type","handleClick","LoginPage","handleSubmit","event","setState","faIcon","stay","state","setTimeout","login","preventDefault","setUserId","carplateRef","current","value","createRef","focus","onSubmit","htmlFor","padding","fontSize","ref","placeholder","pattern","required","role","ConfirmDelete","cancel","confirm","RoundsTable","editRound","alert","DeleteDialog","setDeleteId","showDeleteDialog","target","cancelDelete","confirmDelete","deleteRound","renderTable","table","r","push","key","rounds","date","minutes","seconds","plate","slot","showConfirmDelete","ConfirmDialog","keys","length","colSpan","fontStyle","ReservationForm","handleChange","name","newSec","newSGS","computeSGS","strokes","SGS","newStrokes","newMin","btnLabel","roundData","saveRound","min","sec","Number","today","Date","now","getTimezoneOffset","toISOString","substr","notes","startData","onChange","size","max","maxLength","rows","cols","Reservations","addRound","newData","data","JSON","parse","localStorage","getItem","roundCount","setItem","stringify","editId","deleteId","val","setEditId","menuOpened","ReservationsTable","icon","AboutBox","background","border","backgroundColor","color","closeAbout","href","MainPage","ChangeModeRounds","ChangeModeFee","ChangeModeService","ChangeModeInfo","butStyle","format","ticking","timezone","marginTop","parkingInfoBtn","reservationBtn","paymentBtn","InfoPage","modeTitle","modeToPage","App","handleChangeMode","newMode","Switchopacity","openMenu","closeMenu","prevState","Id","closeAboutDialog","showAboutDialog","ModePage","disableNavBar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.433b3f18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Parking-Information.0c883f75.png\";","module.exports = __webpack_public_path__ + \"static/media/reservation.4abe3c5f.png\";","module.exports = __webpack_public_path__ + \"static/media/payment.83814cc1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/cusService.744e30b9.png\";","/* AppMode: The enumerated type for AppMode. */\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    RESERVATIONS: \"ReservationsMode\",\n    RESERVATIONS_LOGRESERVATION: \"ReservationsMode-LogReservation\",\n    RESERVATIONS_EDITRESERVATION: \"ReservationsMode-EditReservation\",\n    MAINPAGE: \"MainPage\",\n    INFOPAGE: \"InfoPage\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;","import React from 'react';\nimport AppMode from '../AppMode';\n\nclass NavBar extends React.Component {\n\n  getMenuBtnIcon = () => {\n      if (this.props.mode === AppMode.RESERVATIONS_LOGRESERVATION || \n          this.props.mode === AppMode.RESERVATIONS_EDITRESERVATION)\n          return \"fa fa-arrow-left\";\n      if (this.props.menuOpen)\n        return \"fa fa-times\";\n      return \"fa fa-bars\";\n  }\n\n  handleMenuBtnClick = () => {\n    if (this.props.mode === AppMode.RESERVATIONS_LOGRESERVATION ||\n        this.props.mode === AppMode.RESERVATIONS_EDITRESERVATION) {\n      this.props.changeMode(AppMode.RESERVATIONS);\n    } else if (this.props.mode != AppMode.LOGIN) {\n      this.props.toggleMenuOpen();\n    }\n  }\n\n    \n  render() {\n    return (\n    <div className=\"navbar\">  \n    <span className=\"navbar-items\">\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\n        </span>\n      </button>\n      <img src=\"https://lh3.googleusercontent.com/d/1dPo6A82TYZ-Q9aXyVLGfCohRPeVccNuf=s220?authuser=0\" alt=\"Speed Score Logo\" height=\"38px\"\n      width=\"38px\" border-radius=\"50px\"/>\n      <span className=\"navbar-title\">\n        &nbsp;{this.props.title}\n      </span>\n    </span>\n  </div>\n); \n}\n}\n\nexport default NavBar;\n","import React from 'react';\nimport AppMode from './../AppMode.js'\n\nclass SideMenu extends React.Component {\n\n//renderModeItems -- Renders correct subset of mode menu items based on\n//current mode, which is stored in this.prop.mode. Uses switch statement to\n//determine mode.\nrenderModeMenuItems = () => {\n  switch (this.props.mode) {\n    // case AppMode.FEED:\n    //   return(\n    //     <div>\n    //     <a className=\"sidemenu-item\">\n    //         <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\n    //     <a className=\"sidemenu-item \">\n    //         <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\n    //     </div>\n    //   );\n    // break;\n    case AppMode.MAINPAGE:\n      return(\n        <div>\n        {/* <a className=\"sidemenu-item\">\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a> */}\n        <a className=\"sidemenu-item \">\n            <span className=\"fa fa-exclamation-circle\"></span>&nbsp;Car Plate</a>\n        </div>\n      );\n    break;\n    case AppMode.RESERVATIONS:\n      return(\n        <div>\n          <a className=\"sidemenu-item\"  onClick={() => this.props.openRoundsForm()}>\n            <span className=\"fa fa-plus\"></span>&nbsp;Make New Reservation</a>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Reservations</a>\n        </div>\n      );\n    break;\n    // case AppMode.COURSES:\n    //   return(\n    //     <div>\n    //     <a className=\"sidemenu-item\">\n    //         <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\n    //     <a className=\"sidemenu-item\">\n    //         <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\n    //     </div>\n    //   );\n    default:\n        return null;\n    }\n}\n\n    render() {\n       return (\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\n             onClick={this.props.toggleMenuOpen}>\n          {/* SIDE MENU TITLE */}\n          <div className=\"sidemenu-title\">\n              <img src='https://lh3.googleusercontent.com/d/1qyej0Pdi1IwJNLMgJ3Feag6ojUX-CCfw=s220?authuser=0' height='50' width='50' />\n              <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.userId}</span>\n          </div>\n          {/* MENU CONTENT */}\n          {this.renderModeMenuItems()}\n          {/* The following menu items are present regardless of mode */}\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={()=>this.props.showAbout()}>\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={()=>this.props.logOut(AppMode.LOGIN)}>\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\n        </div>\n       );\n    }\n}\n\nexport default SideMenu;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\n\nclass ModeBar extends React.Component {\n    render() {\n      const ModeBarStyle = {opacity: this.props.opa}\n      return(\n        <div style={ModeBarStyle} className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\n          <fieldset disabled={this.props.disable}>\n          {/* <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\n              onClick={()=>this.props.changeMode(AppMode.FEED)}>\n            <span className=\"modebaricon fa fa-th-list\"></span>\n            <span className=\"modebar-text\">Feed</span>\n          </a> */}\n          <a className={(this.props.mode === AppMode.ROUNDS || \n                this.props.mode === AppMode.ROUNDS_EDITROUND || \n                this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                    \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\n            <span className=\"modebar-icon  fa fa-history\"></span>\n            <span className=\"modebar-text\">Rounds</span>\n          </a>\n          <a className={(this.props.mode === AppMode.MAINPAGE ? \" item-selected\" : null)}\n              onClick={()=>this.props.changeMode(AppMode.MAINPAGE)}>\n            <span className=\"modebaricon fa fa-th-list\"></span>\n            <span className=\"modebar-text\">Coming Soon!</span>\n          </a>\n          \n          {/* <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(AppMode.COURSES)}>\n            <span className=\"modebar-icon  fa fa-flag\"></span>\n            <span className=\"modebar-text\">Courses</span>\n          </a>  */}\n          </fieldset>\n        </div>\n      );\n    }\n}\n\nexport default ModeBar;\n","import React from 'react';\n\nclass FloatingButton extends React.Component {\n    // constructor(props) {\n    //   super (props);\n    //   this.state = {menuOpened: this.props.menuOpened}\n    // }\n    render() {\n      const buttonDisable = this.props.menuOpen !== false; \n      return(\n        <div type=\"button\" className=\"floatbtn\" onClick={this.props.handleClick}>\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\n        </div>  \n      );\n    }\n}\n\nexport default FloatingButton;\n","import React from 'react';\nimport AppMode from \"./../AppMode.js\";\n\nclass LoginPage extends React.Component {\n\n    constructor() {\n        super();\n        //Create a ref for the email input DOM element\n        this.carplateRef = React.createRef();\n        this.state = {faIcon: \"fa fa-sign-in\"}\n      }\n    \n    //Focus cursor in email input field when mounted\n    componentDidMount() {\n        this.carplateRef.current.focus();\n    }  \n\n    handleSubmit = (event) => {\n        this.setState({faIcon: \"fa fa-spin fa-spinner\"});\n        let stay = this.state\n        delete stay.faIcon;\n        setTimeout(this.login,1000,stay);\n        event.preventDefault();\n        this.props.setUserId(this.carplateRef.current.value);\n    }\n    login = () =>{\n        this.props.changeMode(AppMode.MAINPAGE);\n    }\n\n    render() {\n        return(\n        <div id=\"login-mode-div\" className=\"padded-page\">\n        <center>\n            <h1 />\n            <form id=\"loginInterface\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"carplateInput\" style={{ padding: 0, fontSize: 24 }}>\n                Car Plate:\n                <input\n                ref={this.carplateRef}\n                className=\"form-control login-text\"\n                // type=\"email\"\n                placeholder=\"Enter Your Car Plate\"\n                id=\"carplateInput\"\n                pattern=\"[A-Z0-9]+\"\n                required={true}\n                />\n            </label>\n            <p />\n            <label htmlFor=\"phonenumInput\" style={{ padding: 0, fontSize: 24 }}>\n                Phone Number:\n                <input\n                className=\"form-control login-text\"\n                type=\"password\"\n                placeholder=\"Enter Phone Number\"\n                pattern=\"[0-9]+{10}\"\n                required={true}\n                />\n            </label>\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\n            <button\n                type=\"submit\"\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n                <span id=\"login-btn-icon\" className={this.state.faIcon}/>\n                &nbsp;Submit\n            </button>\n            <br />\n            <a role=\"button\" className=\"login-btn\">\n                <img src=\"https://drive.google.com/uc?export=view&id=1YXRuG0pCtsfvbDSTzuM2PepJdbBpjEut\" />\n            </a>\n            <a role=\"button\" className=\"login-btn\">\n                <img src=\"https://drive.google.com/uc?export=view&id=1ZoySWomjxiCnC_R4n9CZWxd_qXzY1IeL\" />\n            </a>\n            <p>\n                <i>Version SKS-SPS parking system.</i>\n            </p>\n            <p>\n                <i>© 2021 Develope Team of SKS-SPS parking system. All rights reserved.</i>\n            </p>\n            </form>\n        </center>\n        </div>\n        )\n    }\n}\n\nexport default LoginPage;\n","import React from 'react';\n\nclass ConfirmDelete extends React.Component {\n    //render: presents user with dialog to confirm deletion\n    //of round. Credit: https://getbootstrap.com/docs/4.0/components/modal/\n    render() {\n        return (\n            <div className=\"modal\" role=\"dialog\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                    <p className=\"modal-title\">Confirm Round Deletion</p>\n                    <button className=\"close-modal-button\" onClick={()=>this.props.cancel()}>\n                    &times;</button>\n                    </div>\n                        <div className=\"modal-body\">\n                            <h4>Are you sure that you want to delete this round?</h4>\n                            <div className=\"modal-footer\">\n                            <button className=\"btn btn-primary\" onClick={() => this.props.confirm()}>Yes, delete round</button> \n                            {/* onClick={} */}\n                            <button className=\"btn btn-secondary\" onClick={() => this.props.cancel()}>No, do not delete round</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            );\n        }\n}\nexport default ConfirmDelete;\n","import React from 'react';\nimport AppMode from './../AppMode.js';\nimport ConfirmDialog from './ConfirmDialog.js';\n\nclass RoundsTable extends React.Component {\n  constructor(props) {\n    super (props);\n    this.state = {showDeleteDialog: this.props.showConfirmDelete,\n                  target: 0}\n  }\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    alert(\"This function is under maintance!  \")\n    // this.props.setEditId(id);\n    // this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  DeleteDialog = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({showDeleteDialog: true});\n    this.setState({target: id})\n  }\n  cancelDelete = () =>{\n    this.setState({showDeleteDialog: false});\n  }\n  confirmDelete = () =>{\n    this.props.deleteRound()\n    this.setState({showDeleteDialog: false});\n  }\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (const r in this.props.rounds) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date}</td>\n        <td>{this.props.rounds[r].minutes + \":\" + \n              this.props.rounds[r].seconds}\n        </td>\n        <td>{this.props.rounds[r].plate}</td>\n        <td>{this.props.rounds[r].slot}</td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.DeleteDialog(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div>\n      {this.state.showDeleteDialog == true? \n      <ConfirmDialog\n      confirm={this.confirmDelete}\n      cancel={this.cancelDelete}/> \n      : null}\n      <div className=\"padded-page\">\n        <h1></h1>\n        <table className=\"table table-hover\">\n          <thead className=\"thead-light\">\n          <tr>\n          <th>Date</th>\n          <th>Times</th>\n          <th>Plate</th>\n          <th>Assinged slot</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n          </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.props.rounds).length === 0 ? \n            <tr>\n            <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No reservation found</td>\n            </tr> : this.renderTable()\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass ReservationForm extends React.Component {\n    constructor(props) {\n        super(props);\n        //Create date object for today, taking time zone into consideration\n        let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n        //store date as ISO string\n        if (this.props.mode === AppMode.RESERVATIONS_LOGRESERVATION) {\n            //If logging a new round, the starting state is a default round with\n            //today's date.\n            this.state = {date:  today.toISOString().substr(0,10), \n                        plate: \"\",\n                        slot: \"\",\n                        notes: \"\",\n                        faIcon: \"fa fa-save\",\n                        btnLabel: \"Save Round Data\"}\n        } else {\n            //if editing an existing round, the starting state is the round's\n            //current data\n            this.state = this.props.startData;\n            this.state.faIcon = \"fa fa-edit\";\n            this.state.btnLabel = \"Update Reservation Data\";\n        }\n    }\n  \n  \n    handleChange = (event) => {\n        const name = event.target.name;\n        if (name === \"seconds\") {\n          let newSec = (event.target.value.length < 2 ? \"0\" + \n            event.target.value : event.target.value);\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \n                                       newSec);\n          this.setState({seconds: newSec, SGS: newSGS});\n        } else if (name === \"strokes\") {\n          let newStrokes = event.target.value;\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \n            this.state.seconds);\n          this.setState({strokes: newStrokes, SGS: newSGS});\n        } else if (name === \"minutes\") {\n            let newMin = event.target.value;\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \n              this.state.seconds);\n            this.setState({minutes: newMin, SGS: newSGS});\n        } else {\n          this.setState({[name]: event.target.value});\n        }\n    }\n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n        //start spinner\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                        btnLabel: (this.props.mode === AppMode.RESERVATIONS_LOGRESERVATION ? \n                                    \"Saving...\" : \"Updating...\")});\n        //Prepare current round data to be saved\n        let roundData = this.state;\n        delete roundData.faIcon;\n        delete roundData.btnLabel;\n        //call saveRound on 1 second delay to show spinning icon\n        setTimeout(this.props.saveRound,1000,roundData); \n        event.preventDefault(); \n        }\n  \n\n    computeSGS = (strokes, min, sec) => {\n      return (Number(strokes) + Number(min)) \n                  + \":\" + sec;\n    }\n  \n    render() {\n      return (\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\n          <center>\n            <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n            <p></p>\n            <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"0\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"1\" max=\"60\" value={this.state.seconds} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n            <label>\n              Plate:\n              <input name=\"plate\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.plate} onChange={this.handleChange}\n                placeholder=\"Plate Number\" size=\"50\" maxLength=\"50\" />\n            </label>\n          <p></p>\n          <label>\n              Preferred Slot:\n              <input name=\"slot\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.slot} onChange={this.handleChange}\n                placeholder=\"Prefer Slot ID\" size=\"20\" maxLength=\"20\" />\n            </label>\n          <p></p>\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter round notes\" value={this.state.notes} \n                onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\n          </button>\n          </center>\n        </form>\n      );\n    }\n}\n\nexport default ReservationForm;","//Rounds -- A parent component for the app's \"rounds\" mode.\n//Manages the rounds data for the current user and conditionally renders the\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\n\nimport React from 'react';\nimport AppMode from '../AppMode.js';\nimport ReservationsTable from './ReservationsTable.js';\nimport ReservationForm from './ReservationForm.js';\nimport FloatingButton from './FloatingButton.js';\n\nclass Reservations extends React.Component {\n\n    //Initialize a Rounds object based on local storage\n    constructor(props) {\n            super(props);\n            let data = JSON.parse(localStorage.getItem(this.props.userId)); \n            if (data == null) { //no data yet for this user -- create empty record\n                data = {rounds: {},\n                        roundCount: 0};  \n                localStorage.setItem(this.props.userId,JSON.stringify(data));\n            }\n            this.state = {rounds: data.rounds,\n                          roundCount: data.roundCount,\n                          deleteId: \"\",\n                          editId: \"\",\n                          showConfirmDelete: false,\n                          menuOpened: this.props.menuOpened};           \n        }\n\n    //addRound -- Given an object newData containing a new round, add the round\n    //to the current user's list of rounds, incremeting roundCount to ensure\n    //the round id is unique. Then commit to local storage and toggle\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\n    addRound = (newData) => {\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\n        data.rounds[++data.roundCount] = newData;\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\n        this.setState({rounds: data.rounds, roundCount: data.roundCount});\n        this.props.changeMode(AppMode.RESERVATIONS);\n    }\n\n    //editRound -- Given an object newData containing updated data on an\n    //existing round, update the current user's round uniquely identified by\n    //this.state.editId, commit to local storage, reset editId to empty and\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\n    //round. \n    editRound = (newData) => {\n        let data = JSON.parse(localStorage.getItem(this.props.userId)); \n        data.rounds[this.state.editId] = newData;\n        localStorage.setItem(this.props.userId, JSON.stringify(data));\n        this.setState({rounds: data.rounds, editId: \"\"});\n        this.props.changeMode(AppMode.RESERVATIONS);\n    }\n\n    //deleteRound -- Delete the current user's round uniquely identified by\n    //this.state.deleteId, commit to local storage, and reset deleteId to empty.\n    deleteRound = () => {\n        let data = JSON.parse(localStorage.getItem(this.props.userId));\n        delete data.rounds[this.state.deleteId];\n        localStorage.setItem(this.props.userId,JSON.stringify(data));\n        this.setState({rounds: data.rounds, deleteId: \"\"});\n    }  \n\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\n    //the user is considering deleting.\n    setDeleteId = (val) => {\n        this.setState({deleteId: val});\n    }\n\n    //setEditId -- Capture in this.state.editId the unique id of the item\n    //the user is considering editing.\n    setEditId = (val) => {\n        this.setState({editId: val});\n    }\n    \n    //render -- Conditionally render the Rounds mode page as either the rounds\n    //table, the rounds form set to obtain a new round, or the rounds form set\n    //to edit an existing round.\n    render() {\n        // alert(this.state.menuOpened)\n        switch(this.props.mode) {\n            case AppMode.RESERVATIONS:\n                return (\n                    <>\n                    <ReservationsTable \n                    rounds={this.state.rounds}\n                    setEditId={this.setEditId}\n                    setDeleteId={this.setDeleteId}\n                    deleteRound={this.deleteRound}\n                    changeMode={this.props.changeMode}\n                    menuOpen={this.props.menuOpen} /> \n                    <FloatingButton\n                        handleClick={() => \n                        this.props.changeMode(AppMode.RESERVATIONS_LOGRESERVATION)}\n                        menuOpen={this.props.menuOpen}\n                        icon={\"fa fa-plus\"} />\n                    </>\n                );\n            case AppMode.RESERVATIONS_LOGRESERVATION:\n                return (\n                    <ReservationForm\n                        mode={this.props.mode}\n                        startData={\"\"} \n                        saveRound={this.addRound} />\n                );\n            case AppMode.RESERVATIONS_EDITRESERVATION:\n                return (\n                    <ReservationForm\n                        mode={this.props.mode}\n                        startData={this.state.rounds[this.state.editId]} \n                        saveRound={this.editRound} />\n                );\n        }\n    }\n\n}   \n\nexport default Reservations;\n","import React from 'react';\n\nclass AboutBox extends React.Component {\n\n    render() {\n      return(\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\n            <div className=\"modal-content\" style={{background: '#fff'}}>\n                <div className=\"modal-header\">\n                    <center>\n                    <h3 className=\"modal-title\"><b>About SKS-SPS Parking Express System</b>\n                        <button id=\"modalClose\" className=\"close\"\n                        style={{border: '2px solid black',\n                        backgroundColor: 'black', color: 'white'}} onClick={()=>this.props.closeAbout()}>\n                        &times;</button>\n                    </h3>\n                    </center>\n                    \n                </div>\n                <div className=\"modal-body\">\n                    <center>\n                    <img\n                    src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n                    height=\"200\" width=\"200\"></img>\n                    <h3>The World's First and Only Suite of Apps for Speedgolf</h3>\n                    <p style={{fontStyle:'italic'}}>Version 5 (Live), Build 20.6.2018 &copy; 2017-20 The Professor of Speedgolf. All rights.\n                    </p>\n                    </center>\n                    <p>SpeedScore apps support</p>\n                    <ul>\n                    <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                    <li>tracking personal speedgolf rounds and sharing results\n                    (<i>SpeedScore Track&reg;</i>)</li>\n                    <li>finding speedgolf-friendly courses, booking tee times, and\n                    paying to play speedgolf by the minute (<i>SpeedScore\n                    Play&reg;</i>)</li>\n                    </ul>\n                    <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                    associate professor of computer science at Washington State\n                    University and the <i>Professor of Speedgolf</i>, with support\n                    from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\n                    Google server-side technologies.</p>\n                    <p>For more information on SpeedScore, visit <a\n                    href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                    site</a>. For more information on speedgolf, visit <a\n                    href=\"http://playspeedgolf.com\"\n                    target=\"_blank\">playspeedgolf.com</a> and <a\n                    href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                    USA</a>.</p>\n                </div>\n                <div className=\"modal-footer\">\n                        <button id=\"aboutOK\" className=\"close\" style={{border: '2px solid black', padding: '4px',\n                         backgroundColor: 'black' , color: 'white'}} onClick={()=>this.props.closeAbout()}>\n                        OK</button>\n                </div>\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default AboutBox;","import React from 'react';\nimport AppMode from \"./../AppMode.js\";\nimport parkingInfoBtn from \"./../Parking-Information.png\";\nimport reservationBtn from \"./../reservation.png\";\nimport paymentBtn from \"./../payment.jpeg\";\nimport customerBtn from \"./../cusService.png\";\nimport Clock from 'react-live-clock';\n\nclass MainPage extends React.Component {\n    ChangeModeRounds = () =>{\n      this.props.changeMode(AppMode.RESERVATIONS_LOGRESERVATION)\n    }\n    ChangeModeFee = () =>{\n      this.props.changeMode(AppMode.RESERVATIONS)\n    }\n    ChangeModeService = () =>{\n      this.props.changeMode(AppMode.RESERVATIONS)\n    }\n    ChangeModeInfo = () =>{\n      this.props.changeMode(AppMode.INFOPAGE)\n    }\n\n    render() {\n      var butStyle = {width:'180px',height:'45px'}\n      return(\n        <div>\n          <div>\n            <center>\n              <Clock format={'HH:mm:ss'} ticking={true} timezone={'US/Pacific'}/>\n            </center>\n          </div>\n            <center>\n            <div style={{marginTop: '10%'}}>\n                <h1>Welcome to SKS-SPS parking system</h1>\n                <h2>To access following service, please click on related button</h2>\n              </div>\n            </center>\n            <div style={{marginTop: '10%'}}>\n              <center>\n                <a role=\"button\" className=\"login-btn\" onClick = {this.ChangeModeInfo}>\n                <img style={butStyle} src={parkingInfoBtn} />\n                </a>\n                <a role=\"button\" className=\"login-btn\" onClick = {this.ChangeModeRounds}>\n                <img style={butStyle} src={reservationBtn} />\n                </a>\n                <a role=\"button\" className=\"login-btn\" onClick = {this.ChangeModeFee}>\n                <img style={butStyle} src={paymentBtn} />\n                </a>\n                {/* <button onClick = {this.ChangeModeFee}>Pay Parking Fee</button>\n                <button onClick = {this.ChangeModeService}>Customer Service</button> */}\n              </center>\n              <div type=\"button\" className=\"floatbtn\" onClick={this.ChangeModeService}>\n                <span className=\"floatbtn-icon fa fa-phone\">\n                </span>\n              </div> \n            </div>\n        </div>\n      );\n    }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport AppMode from \"./../AppMode.js\";\n\nclass InfoPage extends React.Component {\n\n    render() {\n      return(\n        <div>\n            <center>\n            <div style={{marginTop: '30%'}}>\n                <h1>This Page is under construction.</h1>\n                <h2>Look three small</h2>\n                <h3>This Page is under construction.</h3>\n                </div>\n            </center>\n        </div>\n      );\n    }\n}\n\nexport default InfoPage;\n","import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport FloatingButton from './FloatingButton.js';\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\"\nimport Reservations from './Reservations.js';\nimport AboutBox from './AboutBox.js';\nimport MainPage from './MainPage.js';\nimport InfoPage from './InfoPage.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SKS-SPS Parking System\";\nmodeTitle[AppMode.RESERVATIONS] = \"My Reservation\";\nmodeTitle[AppMode.RESERVATIONS_LOGRESERVATION] = \"Log New Exercise\";\nmodeTitle[AppMode.RESERVATIONS_EDITRESERVATION] = \"Edit Reservation\";\nmodeTitle[AppMode.MAINPAGE] = \"SKS-SPS Parking System\"\nmodeTitle[AppMode.INFOPAGE] = \"Parking Information\"\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.RESERVATIONS] = Reservations;\nmodeToPage[AppMode.RESERVATIONS_LOGRESERVATION] = Reservations;\nmodeToPage[AppMode.RESERVATIONS_EDITRESERVATION] = Reservations;\nmodeToPage[AppMode.MAINPAGE] = MainPage;\nmodeToPage[AppMode.INFOPAGE] = InfoPage;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  userId: \"\",\n                  showAbout: false,\n                  opa: 1};\n  }\n\n  handleChangeMode = (newMode) => {\n    this.Switchopacity(newMode)\n    if (newMode == \"ReservationsMode-LogReservation\" && this.state.menuOpen == true){\n        this.setState({mode: this.state.mode});\n    }\n    else {\n      this.setState({mode: newMode});\n    }\n  }\n  Switchopacity = (newMode) =>{\n    if (newMode == \"ReservationsMode-LogReservation\"){\n      this.setState({opa: 0.2});\n    }\n    else {\n      this.setState({opa: 1})\n    }\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id});\n  }\n  openRoundsForm = () =>{\n    this.setState({mode: AppMode.RESERVATIONS_LOGRESERVATION});\n  }\n  closeAboutDialog = () =>{\n    this.setState({showAbout: false});\n  }\n  showAboutDialog = () => {\n    this.setState({showAbout: true});\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div>\n      {this.state.showAbout == true? <AboutBox closeAbout={this.closeAboutDialog}/>: null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            userId={this.state.userId}\n            showAbout={this.showAboutDialog}\n            openRoundsForm={this.openRoundsForm}\n            logOut={this.handleChangeMode}/>\n          <ModeBar \n            mode={this.state.mode} \n            changeMode={this.handleChangeMode}\n            menuOpen={this.state.menuOpen}\n            disableNavBar={this.state.disableNavBar}\n            opa={this.state.opa}/>\n          <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userId={this.state.userId}\n            setUserId={this.setUserId}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}